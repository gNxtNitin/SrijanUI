@{
    Layout = "_DashboardLayout";
}

@section PageStyles {
    <link rel="stylesheet" href="~/app-assets/vendor/libs/datatables-bs5/datatables.bootstrap5.css" />
    <link rel="stylesheet" href="~/app-assets/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css" />
    <link rel="stylesheet" href="~/app-assets/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <style>
        .form-label.required::after {
            content: " *";
            color: red;
        }
    </style>
}


@section PageScripts
{

    <script src="~/app-assets/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
    <script src="~/js/Admin/City.js"></script>
    @* <script src="~/js/OrderMaster.js"></script>
    <script src="~/js/InvoiceTable.js"></script> *@
    @* <script src="~/app-assets/js/app-user-list.js"></script> *@
}



<!--This is the modal-->
<div class="offcanvas offcanvas-end" id="add-new-record">
    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title" id="exampleModalLabel">Add City</h5>
        <button type="button"
                class="btn-close text-reset"
                data-bs-dismiss="offcanvas"
                aria-label="Close"></button>
    </div>
    <div class="offcanvas-body flex-grow-1">
        <form class="add-new-record pt-0 row g-2" id="form-add-new-record" onsubmit="return false">
            <div class="col-sm-12">
                <div class=" text-right">
                    <label for="sname" class="form-label required">State Name:</label>
                </div>
                <div class=" ">
                    <select class="form-select dt-sname" id="sname" name="sname" aria-label="Select State" required>

                        <option value="">Select State</option>
                        

                    </select>
                </div>
            </div>
            <div class="col-sm-12">
                <div class=" text-right">
                    <label for="zname" class="form-label required">City Name:</label>
                </div>
                <div class=" ">
                    <input type="text" class="form-control dt-cname" id="cname" name="cname" placeholder="Enter City Name" maxlength="200">
                </div>
            </div>
            <div class="col-sm-12">
                <button class="btn btn-danger m-2" data-bs-dismiss="offcanvas" id="btn-cancel" type="button">Cancel</button>
                <button class="btn btn-primary m-2" id="btn-submit" type="button">Submit</button>                
            </div>
        </form>
    </div>
</div>
<!-- Tjis is the main portal;-->
<div class="card">
    <div class="card-datatable table-responsive">
        <table class="datatables-city table table-hover dt-table-striped">
            <thead class="border-top bg-menu-theme text-white fw-2">
                <tr>

                    <th></th>
                   @*  <th>S. No.</th> *@
                    <th>City</th>
                    <th>State</th>
                    <th>Created Date</th>
                    <th>Actions</th>

                </tr>
            </thead>
        </table>
    </div>
</div>
<button type="button" class=" modal-weigh" style="display:none;" data-bs-toggle="modal" data-bs-target="#shareProject">
    Show
</button>

<script>
    var fv;
    $(document).ready(function () {
         fv = FormValidation.formValidation(document.getElementById('form-add-new-record'), {
          fields: {
            cname: {
              validators: {
                notEmpty: {
                  message: 'City Name is required.'
                }
              }
            },
            sname: {
              validators: {
                notEmpty: {
                  message: 'State is required.'
                }
              }
            }

          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: '',
              rowSelector: '.row'
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          },
          init: instance => {
            instance.on('plugins.message.placed', function (e) {
              if (e.element.parentElement.classList.contains('input-group')) {
                e.element.parentElement.insertAdjacentElement('afterend', e.messageElement);
              }
            });
          }
        });
        //console.log(fv);
    })
</script>
<script>
    $(document).ready(function () {
        document.getElementById('btn-submit').addEventListener('click', function () {
            //console.log(fv);
            var btn = $(this);
            fv.validate().then(function (status) {

                if (status !== 'Valid') {

                  // If valid, you can manually submit the form here
                  return;
                }
                else{

                    $(".offcanvas-body").block({
                        message: '<div class="spinner-border text-primary" role="status"></div>',

                        css: {
                            border: 'none',
                            backgroundColor: 'transparent'
                        },

                        overlayCSS: {
                            backgroundColor: '#fff',
                            opacity: 0.8

                        }
                    });

                    btn.prop('disabled', true);


                        var cityInfo = {
                            flag: "C",
                            cname: $('#cname').val().trim(),
                            sname: $('#sname').val().trim(),

                        };

                        $.post({
                            url: '@Url.Action("AddUpdateDeleteCity", "Admin")',
                            data: { sr1: cityInfo },
                            success: function (resp) {
                                
                                btn.prop('disabled', false);
                                $(".offcanvas-body").unblock();
                                if(resp.code>0){
                                    $('#add-new-record').offcanvas('toggle');
                                    city_table.ajax.reload(null, false);
                                    ToastWrapper.success(`City Added successfully!`);
                                }
                                else{
                                    ToastWrapper.error(resp.message);
                                }
                               


                            },
                            error: function (xhr, status, error) {
                                btn.prop('disabled', false);
                                $(".offcanvas-body").unblock();
                                ToastWrapper.error("Something went wrong.")
                            }
                        });


                }
            });








        });
    })
</script>
<script>
    function deleteRecord () {
     $('.datatables-city').on('click', '.delete-record', function() {
        
        var btn = $(this);
        var row = $(this).closest('tr');
        Swal.fire({

            text: 'Are you sure you would like to delete this item?',

            icon: 'warning',

            showCancelButton: true,

            confirmButtonText: 'Yes',

            customClass: {

                confirmButton: 'btn btn-primary me-2 waves-effect waves-light',

                cancelButton: 'btn btn-label-secondary waves-effect waves-light'

            },

            buttonsStyling: false

        }).then(function (result) {

            if (result.value) {
                btn.prop('disabled', true);
                


                var id1 = city_table.row(row).data();
               // console.log(id1['zoneid']);
                //var id = row.find('td:eq(0)').text();
                //var quantity = row.find('td').eq(5).find('input').val();

               var cityInfo = {
                            flag: "D",
                            cityid: id1['cityid'],

                        };
               $.post({
                   url: '@Url.Action("AddUpdateDeleteCity", "Admin")',
                   data: { sr1 : cityInfo },
                   success: function (resp) {
                       btn.prop('disabled', false);
                       if (resp.code > 0)
                      {
                        city_table.row(btn.parents('tr')).remove().draw();
                        ToastWrapper.success(`City deleted successfully!`);
                      }else{
                           ToastWrapper.error(resp.message);
                      }


                   },
                   error: function (xhr, status, error) {
                       btn.prop('disabled', false);
                       ToastWrapper.error(xhr.responseText);
                   }
               });
            }
            else{
            }
        });




       });
    }
</script>
<script>
    function appendData () {
        $.get("/Admin/GetData", { sr1: "Z" }, function(response) {
            response.forEach(function (item) {
                //console.log(item);
                $('#sname').append(`<option value="${item.zoneid}">${item.name}</option>`);
            });
            
            //console.log("Received data:", response);
            // Process the response (e.g., render to HTML)
        });
    }
</script>